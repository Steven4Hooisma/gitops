# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-ingress-controller
#   namespace: ingress-nginx
#   labels:
#     app: nginx-ingress
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nginx-ingress
#   template:
#     metadata:
#       labels:
#         app: nginx-ingress
#     spec:
#       containers:
#         - name: nginx-ingress-controller
#           image: nginx-ingress-controller:latest
#           ports:
#             - name: http
#               containerPort: 80
#             - name: https
#               containerPort: 443
#           args:
#             - "/nginx-ingress-controller"
#             - "--configmap=ingress-nginx/nginx-configuration"
#             - "--default-backend-service=ingress-nginx/default-http-backend"
#             - "--watch-namespace=default"
#             - "--publish-service=ingress-nginx/nginx-ingress-controller"

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-ingress-controller
#   namespace: ingress-nginx
# spec:
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#     - protocol: TCP
#       port: 443
#       targetPort: 443
#   selector:
#     app: nginx-ingress
#   type: LoadBalancer

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: nginx-ingress-service-account
#   namespace: ingress-nginx

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: nginx-ingress-clusterrole
# rules:
#   - apiGroups: [""]
#     resources: ["services", "endpoints", "pods", "configmaps"]
#     verbs: ["get", "list", "watch"]
#   - apiGroups: ["extensions"]
#     resources: ["ingresses"]
#     verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: nginx-ingress-clusterrolebinding
# subjects:
#   - kind: ServiceAccount
#     name: nginx-ingress-service-account
#     namespace: ingress-nginx
# roleRef:
#   kind: ClusterRole
#   name: nginx-ingress-clusterrole
#   apiGroup: rbac.authorization.k8s.io
